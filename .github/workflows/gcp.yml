# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Deploy Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: genie
      PROJECT_ID: genie-application
      GKE_CLUSTER: cluster-1
      GKE_ZONE: us-central1-c
      DEPLOYMENT_NAME: test

    steps:
    - uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: mvn commands
      run: mvn clean install

    - name: path
      run: pwd

    - name: path ls
      run: ls

    - name: Build docker images
      run: docker build -t $IMAGE_NAME:latest .

    - name: Configure Docker Client
      run: gcloud auth configure-docker --quiet

    - name: Push Docker Image to Container Registry
      env:
        GIT_TAG: v0.1.0
      run: |-
         docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
         docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest

    - name: GKE
      uses: google-github-actions/get-gke-credentials@v0.3.0
      with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.SERVICE_ACCOUNT_KEY }}

    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide




